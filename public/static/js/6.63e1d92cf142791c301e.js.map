{"version":3,"sources":["webpack:///static/js/6.63e1d92cf142791c301e.js","webpack:///./~/accounting/accounting.js?502a","webpack:///index.vue?f415","webpack:///./src/Modulos/Vindi/Bills/pages/index.vue?7a47","webpack:///./src/Modulos/Vindi/Bills/pages/index.vue?79f2","webpack:///./src/Modulos/Vindi/Bills/pages/index.vue","webpack:///./src/Modulos/Vindi/Bills/pages/index.vue?68b5"],"names":["webpackJsonp","20","module","exports","__webpack_require__","root","undefined","isString","obj","charCodeAt","substr","isArray","nativeIsArray","toString","call","isObject","defaults","object","defs","key","hasOwnProperty","map","iterator","context","i","j","results","nativeMap","length","checkPrecision","val","base","Math","round","abs","isNaN","checkCurrencyFormat","format","lib","settings","currency","match","pos","neg","replace","zero","version","symbol","decimal","thousand","precision","grouping","number","Array","prototype","Object","unformat","parse","value","regex","RegExp","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","negative","parseInt","mod","split","formatMoney","formats","useFormat","formatColumn","list","padAfterSymbol","indexOf","maxLength","formatted","fVal","join","accounting","this","336","_interopRequireDefault","__esModule","default","defineProperty","_extends2","_extends3","_accounting","_accounting2","_vuex","_config","_lodash","_lodash2","metaInfo","titleTemplate","watch","currentPage","data","loading","months","created","me","setTimeout","self","dtHandle","$","DataTable","serverSide","processing","ajax","url","vindiBills","type","headers","Authorization","$store","state","Auth","token","columns","render","row","moment","due_at","billing_at","charges","reduce","sum","n","status","amount","bill_items","methods","mapActions","fetch","_this","setFetching","fetching","$http","get","then","_ref","productsSetData","pagination","meta","navigate","page","$router","push","name","query","computed","mapState","Products","products","$route","beforeRouteLeave","to","from","next","$bus","$off","jQuery","off","mounted","_this2","$on","466","id","sources","names","mappings","file","sourceRoot","526","content","locals","575","__vue_exports__","__vue_options__","__vue_template__","options","staticRenderFns","614","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","expression","modifiers","body","attrs","_m"],"mappings":"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","file":"static/js/6.63e1d92cf142791c301e.js","sourcesContent":["webpackJsonp([6,11],{\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * accounting.js v0.4.1\n\t * Copyright 2014 Open Exchange Rates\n\t *\n\t * Freely distributable under the MIT license.\n\t * Portions of accounting.js are inspired or borrowed from underscore.js\n\t *\n\t * Full details and documentation:\n\t * http://openexchangerates.github.io/accounting.js/\n\t */\n\t\n\t(function(root, undefined) {\n\t\n\t\t/* --- Setup --- */\n\t\n\t\t// Create the local library object, to be exported or referenced globally later\n\t\tvar lib = {};\n\t\n\t\t// Current version\n\t\tlib.version = '0.4.1';\n\t\n\t\n\t\t/* --- Exposed settings --- */\n\t\n\t\t// The library's settings configuration object. Contains default parameters for\n\t\t// currency and number formatting\n\t\tlib.settings = {\n\t\t\tcurrency: {\n\t\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\t\tprecision : 2,\t\t// decimal places\n\t\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\t\tthousand : \",\",\n\t\t\t\tdecimal : \".\"\n\t\t\t}\n\t\t};\n\t\n\t\n\t\t/* --- Internal Helper Methods --- */\n\t\n\t\t// Store reference to possibly-available ECMAScript 5 methods for later\n\t\tvar nativeMap = Array.prototype.map,\n\t\t\tnativeIsArray = Array.isArray,\n\t\t\ttoString = Object.prototype.toString;\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a string\n\t\t * from underscore.js\n\t\t */\n\t\tfunction isString(obj) {\n\t\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t\t}\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a string\n\t\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t\t */\n\t\tfunction isArray(obj) {\n\t\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t\t}\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a true object\n\t\t */\n\t\tfunction isObject(obj) {\n\t\t\treturn obj && toString.call(obj) === '[object Object]';\n\t\t}\n\t\n\t\t/**\n\t\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t\t *\n\t\t * Used for abstracting parameter handling from API methods\n\t\t */\n\t\tfunction defaults(object, defs) {\n\t\t\tvar key;\n\t\t\tobject = object || {};\n\t\t\tdefs = defs || {};\n\t\t\t// Iterate over object non-prototype properties:\n\t\t\tfor (key in defs) {\n\t\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\t\n\t\t/**\n\t\t * Implementation of `Array.map()` for iteration loops\n\t\t *\n\t\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t\t * Defers to native Array.map if available\n\t\t */\n\t\tfunction map(obj, iterator, context) {\n\t\t\tvar results = [], i, j;\n\t\n\t\t\tif (!obj) return results;\n\t\n\t\t\t// Use native .map method if it exists:\n\t\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\t\n\t\t\t// Fallback for native .map:\n\t\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\t\n\t\t/**\n\t\t * Check and normalise the value of precision (must be positive integer)\n\t\t */\n\t\tfunction checkPrecision(val, base) {\n\t\t\tval = Math.round(Math.abs(val));\n\t\t\treturn isNaN(val)? base : val;\n\t\t}\n\t\n\t\n\t\t/**\n\t\t * Parses a format string or object and returns format obj for use in rendering\n\t\t *\n\t\t * `format` is either a string with the default (positive) format, or object\n\t\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t\t * either a string or object)\n\t\t *\n\t\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t\t */\n\t\tfunction checkCurrencyFormat(format) {\n\t\t\tvar defaults = lib.settings.currency.format;\n\t\n\t\t\t// Allow function as format parameter (should return string or object):\n\t\t\tif ( typeof format === \"function\" ) format = format();\n\t\n\t\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\t\n\t\t\t\t// Create and return positive, negative and zero formats:\n\t\t\t\treturn {\n\t\t\t\t\tpos : format,\n\t\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero : format\n\t\t\t\t};\n\t\n\t\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\t\n\t\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\t\tpos : defaults,\n\t\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero : defaults\n\t\t\t\t};\n\t\n\t\t\t}\n\t\t\t// Otherwise, assume format was fine:\n\t\t\treturn format;\n\t\t}\n\t\n\t\n\t\t/* --- API Methods --- */\n\t\n\t\t/**\n\t\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t\t * Alias: `accounting.parse(string)`\n\t\t *\n\t\t * Decimal must be included in the regular expression to match floats (defaults to\n\t\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t\t * separator, provide it as the second argument.\n\t\t *\n\t\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t\t *\n\t\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t\t */\n\t\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t\t// Recursively unformat arrays:\n\t\t\tif (isArray(value)) {\n\t\t\t\treturn map(value, function(val) {\n\t\t\t\t\treturn unformat(val, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Fails silently (need decent errors):\n\t\t\tvalue = value || 0;\n\t\n\t\t\t// Return the value as-is if it's already a number:\n\t\t\tif (typeof value === \"number\") return value;\n\t\n\t\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\t\tdecimal = decimal || lib.settings.number.decimal;\n\t\n\t\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\t\tunformatted = parseFloat(\n\t\t\t\t\t(\"\" + value)\n\t\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t\t);\n\t\n\t\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Implementation of toFixed() that treats floats more like decimals\n\t\t *\n\t\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t\t * problems for accounting- and finance-related software.\n\t\t */\n\t\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\t\tvar power = Math.pow(10, precision);\n\t\n\t\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t\t * Alias: `accounting.format()`\n\t\t *\n\t\t * Localise by overriding the precision and thousand / decimal separators\n\t\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t\t */\n\t\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function(val) {\n\t\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.number\n\t\t\t\t),\n\t\n\t\t\t\t// Clean up precision\n\t\t\t\tusePrecision = checkPrecision(opts.precision),\n\t\n\t\t\t\t// Do some calc:\n\t\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\t\n\t\t\t// Format the number:\n\t\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a number into currency\n\t\t *\n\t\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t\t *\n\t\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t\t *\n\t\t * To do: tidy up the parameters\n\t\t */\n\t\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function(val){\n\t\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\t\tformat : format\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.currency\n\t\t\t\t),\n\t\n\t\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\t\t\t// Choose which format to use for this value:\n\t\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\t\n\t\t\t// Return with currency symbol added:\n\t\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a list of numbers into an accounting column, padding with whitespace\n\t\t * to line up currency symbols, thousand separators and decimals places\n\t\t *\n\t\t * List should be an array of numbers\n\t\t * Second parameter can be an object containing keys that match the params\n\t\t *\n\t\t * Returns array of accouting-formatted number strings of same length\n\t\t *\n\t\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t\t * browsers from collapsing the whitespace in the output strings.\n\t\t */\n\t\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\t\tif (!list) return [];\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\t\tformat : format\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.currency\n\t\t\t\t),\n\t\n\t\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\t\n\t\t\t\t// Store value for the length of the longest string in the column:\n\t\t\t\tmaxLength = 0,\n\t\n\t\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Clean up the value\n\t\t\t\t\t\tval = unformat(val);\n\t\n\t\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\t\n\t\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\n\t\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\t\treturn fVal;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t// Pad each number in the list and send back the column of numbers:\n\t\t\treturn map(formatted, function(val, i) {\n\t\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t});\n\t\t};\n\t\n\t\n\t\t/* --- Module Definition --- */\n\t\n\t\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t\t// Otherwise, just add `accounting` to the global object\n\t\tif (true) {\n\t\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\t\texports = module.exports = lib;\n\t\t\t}\n\t\t\texports.accounting = lib;\n\t\t} else if (typeof define === 'function' && define.amd) {\n\t\t\t// Return the library as an AMD module:\n\t\t\tdefine([], function() {\n\t\t\t\treturn lib;\n\t\t\t});\n\t\t} else {\n\t\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t\t// Returns a reference to the library's `accounting` object;\n\t\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\t\treturn function() {\n\t\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t\t// Delete the noConflict method:\n\t\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\t\treturn lib;\n\t\t\t\t};\n\t\t\t})(root.accounting);\n\t\n\t\t\t// Declare `fx` on the root (global/window) object:\n\t\t\troot['accounting'] = lib;\n\t\t}\n\t\n\t\t// Root will be `window` in browser or `global` on the server:\n\t}(this));\n\n\n/***/ }),\n\n/***/ 336:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends2 = __webpack_require__(21);\n\t\n\tvar _extends3 = _interopRequireDefault(_extends2);\n\t\n\tvar _accounting = __webpack_require__(20);\n\t\n\tvar _accounting2 = _interopRequireDefault(_accounting);\n\t\n\tvar _vuex = __webpack_require__(32);\n\t\n\tvar _config = __webpack_require__(5);\n\t\n\tvar _http = __webpack_require__(7);\n\t\n\tvar _lodash = __webpack_require__(12);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  metaInfo: {\n\t    titleTemplate: '%s - Faturas Vindi'\n\t  },\n\t  watch: {\n\t    currentPage: 'fetch'\n\t  },\n\t  data: function data() {\n\t    return {\n\t      loading: true,\n\t      months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']\n\t    };\n\t  },\n\t  created: function created() {\n\t    var me = this;\n\t    me.loading = true;\n\t    setTimeout(function () {\n\t      self.dtHandle = $('#' + 'table1').DataTable({\n\t        \"serverSide\": true,\n\t        \"processing\": true,\n\t        \"ajax\": {\n\t          \"url\": _config.vindiBills,\n\t          \"type\": \"GET\",\n\t          \"headers\": {\n\t            \"Authorization\": \"Bearer \" + me.$store.state.Auth.token\n\t          }\n\t        },\n\t        \"columns\": [{ \"data\": \"customer.name\" }, { \"data\": \"created_at\",\n\t          render: function render(data, type, row) {\n\t            return moment(data).format(\"DD-MM-YYYY\");\n\t          }\n\t        }, { \"data\": \"due_at\",\n\t          render: function render(data, type, row) {\n\t            if (row.due_at === null) {\n\t              return moment(row.billing_at).format(\"DD-MM-YYYY\");\n\t            } else {\n\t              return moment(data).format(\"DD-MM-YYYY\");\n\t            }\n\t          }\n\t\n\t        }, { \"data\": \"charges\",\n\t          render: function render(data, type, row) {\n\t            return _lodash2.default.map(row.charges, 'payment_method.public_name').join(', ');\n\t          }\n\t        }, { \"data\": \"amount\" }, { \"data\": \"charges\",\n\t          render: function render(data, type, row) {\n\t            return 'R$ ' + _accounting2.default.formatNumber(_lodash2.default.reduce(row.charges, function (sum, n) {\n\t              if (n.status === \"pending\") {\n\t                return sum + parseFloat(n.amount);\n\t              } else {\n\t                return sum + 0;\n\t              }\n\t            }, 0), 2);\n\t          }\n\t        }, { \"data\": null,\n\t          render: function render(data, type, row) {\n\t            return _lodash2.default.map(row.bill_items, 'product.name').join(', ');\n\t          }\n\t        }, { \"data\": \"customer.email\" }]\n\t      });\n\t      me.loading = false;\n\t    }, 1000);\n\t  },\n\t\n\t  methods: (0, _extends3.default)({}, (0, _vuex.mapActions)(['productsSetData', 'setFetching']), {\n\t    fetch: function fetch() {\n\t      var _this = this;\n\t\n\t      this.setFetching({ fetching: true });\n\t\n\t      this.$http.get(_config.vindiBills + '?page=' + this.currentPage).then(function (_ref) {\n\t        var data = _ref.data;\n\t\n\t        _this.productsSetData({\n\t          list: data.data,\n\t          pagination: data.meta.pagination\n\t        });\n\t\n\t        _this.setFetching({ fetching: false });\n\t      });\n\t    },\n\t    navigate: function navigate(page) {\n\t      this.$router.push({ name: 'vindi.bills', query: { page: page } });\n\t    }\n\t  }),\n\t\n\t  computed: (0, _extends3.default)({}, (0, _vuex.mapState)({\n\t    fetching: function fetching(state) {\n\t      return state.fetching;\n\t    },\n\t    pagination: function pagination(state) {\n\t      return state.Products.pagination;\n\t    },\n\t    list: function list(state) {\n\t      return state.Products.list;\n\t    }\n\t  }), {\n\t    products: function products() {\n\t      return this.list;\n\t    },\n\t    currentPage: function currentPage() {\n\t      return parseInt(this.$route.query.page, 10) || 1;\n\t    }\n\t  }),\n\t  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n\t    this.$bus.$off('product.created');\n\t    this.$bus.$off('product.updated');\n\t    jQuery('body').off('keyup');\n\t    next();\n\t  },\n\t  mounted: function mounted() {\n\t    var _this2 = this;\n\t\n\t    this.$bus.$on('product.created', function () {\n\t      return _this2.fetch();\n\t    });\n\t    this.$bus.$on('product.updated', function () {\n\t      return _this2.fetch();\n\t    });\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 466:\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"index.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(466);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n\n/***/ 575:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(526)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(336)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(614)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ }),\n\n/***/ 614:\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {}, [_c('div', {\n\t    staticClass: \"panel panel-default\"\n\t  }, [_c('div', {\n\t    staticClass: \"panel-heading\"\n\t  }, [_vm._v(\"\\n      Faturas Vindi\\n    \")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"panel-body\"\n\t  }, [_c('div', {\n\t    staticClass: \"table-responsive\"\n\t  }, [_c('table', {\n\t    directives: [{\n\t      name: \"loading\",\n\t      rawName: \"v-loading.body\",\n\t      value: (_vm.loading),\n\t      expression: \"loading\",\n\t      modifiers: {\n\t        \"body\": true\n\t      }\n\t    }],\n\t    staticClass: \"table table-bordered table-hover\",\n\t    attrs: {\n\t      \"id\": \"table1\"\n\t    }\n\t  }, [_vm._m(0), _vm._v(\" \"), _c('tbody')])])])])])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"Franqueado\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Competência\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Vencimento\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Forma de Pagamento\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Valor Original\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Valor pendente\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Produto\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Email\")])])])\n\t}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/6.63e1d92cf142791c301e.js","/*!\n * accounting.js v0.4.1\n * Copyright 2014 Open Exchange Rates\n *\n * Freely distributable under the MIT license.\n * Portions of accounting.js are inspired or borrowed from underscore.js\n *\n * Full details and documentation:\n * http://openexchangerates.github.io/accounting.js/\n */\n\n(function(root, undefined) {\n\n\t/* --- Setup --- */\n\n\t// Create the local library object, to be exported or referenced globally later\n\tvar lib = {};\n\n\t// Current version\n\tlib.version = '0.4.1';\n\n\n\t/* --- Exposed settings --- */\n\n\t// The library's settings configuration object. Contains default parameters for\n\t// currency and number formatting\n\tlib.settings = {\n\t\tcurrency: {\n\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\tprecision : 2,\t\t// decimal places\n\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t},\n\t\tnumber: {\n\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\tthousand : \",\",\n\t\t\tdecimal : \".\"\n\t\t}\n\t};\n\n\n\t/* --- Internal Helper Methods --- */\n\n\t// Store reference to possibly-available ECMAScript 5 methods for later\n\tvar nativeMap = Array.prototype.map,\n\t\tnativeIsArray = Array.isArray,\n\t\ttoString = Object.prototype.toString;\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js\n\t */\n\tfunction isString(obj) {\n\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t */\n\tfunction isArray(obj) {\n\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a true object\n\t */\n\tfunction isObject(obj) {\n\t\treturn obj && toString.call(obj) === '[object Object]';\n\t}\n\n\t/**\n\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t *\n\t * Used for abstracting parameter handling from API methods\n\t */\n\tfunction defaults(object, defs) {\n\t\tvar key;\n\t\tobject = object || {};\n\t\tdefs = defs || {};\n\t\t// Iterate over object non-prototype properties:\n\t\tfor (key in defs) {\n\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\t/**\n\t * Implementation of `Array.map()` for iteration loops\n\t *\n\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t * Defers to native Array.map if available\n\t */\n\tfunction map(obj, iterator, context) {\n\t\tvar results = [], i, j;\n\n\t\tif (!obj) return results;\n\n\t\t// Use native .map method if it exists:\n\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\n\t\t// Fallback for native .map:\n\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Check and normalise the value of precision (must be positive integer)\n\t */\n\tfunction checkPrecision(val, base) {\n\t\tval = Math.round(Math.abs(val));\n\t\treturn isNaN(val)? base : val;\n\t}\n\n\n\t/**\n\t * Parses a format string or object and returns format obj for use in rendering\n\t *\n\t * `format` is either a string with the default (positive) format, or object\n\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t * either a string or object)\n\t *\n\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t */\n\tfunction checkCurrencyFormat(format) {\n\t\tvar defaults = lib.settings.currency.format;\n\n\t\t// Allow function as format parameter (should return string or object):\n\t\tif ( typeof format === \"function\" ) format = format();\n\n\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\n\t\t\t// Create and return positive, negative and zero formats:\n\t\t\treturn {\n\t\t\t\tpos : format,\n\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : format\n\t\t\t};\n\n\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\n\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\tpos : defaults,\n\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : defaults\n\t\t\t};\n\n\t\t}\n\t\t// Otherwise, assume format was fine:\n\t\treturn format;\n\t}\n\n\n\t/* --- API Methods --- */\n\n\t/**\n\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t * Alias: `accounting.parse(string)`\n\t *\n\t * Decimal must be included in the regular expression to match floats (defaults to\n\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t * separator, provide it as the second argument.\n\t *\n\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t *\n\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t */\n\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t// Recursively unformat arrays:\n\t\tif (isArray(value)) {\n\t\t\treturn map(value, function(val) {\n\t\t\t\treturn unformat(val, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Fails silently (need decent errors):\n\t\tvalue = value || 0;\n\n\t\t// Return the value as-is if it's already a number:\n\t\tif (typeof value === \"number\") return value;\n\n\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\tdecimal = decimal || lib.settings.number.decimal;\n\n\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\tunformatted = parseFloat(\n\t\t\t\t(\"\" + value)\n\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t);\n\n\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t};\n\n\n\t/**\n\t * Implementation of toFixed() that treats floats more like decimals\n\t *\n\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t * problems for accounting- and finance-related software.\n\t */\n\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\tvar power = Math.pow(10, precision);\n\n\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t};\n\n\n\t/**\n\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t * Alias: `accounting.format()`\n\t *\n\t * Localise by overriding the precision and thousand / decimal separators\n\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t */\n\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val) {\n\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal\n\t\t\t\t}),\n\t\t\t\tlib.settings.number\n\t\t\t),\n\n\t\t\t// Clean up precision\n\t\t\tusePrecision = checkPrecision(opts.precision),\n\n\t\t\t// Do some calc:\n\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\n\t\t// Format the number:\n\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t};\n\n\n\t/**\n\t * Format a number into currency\n\t *\n\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t *\n\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t *\n\t * To do: tidy up the parameters\n\t */\n\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val){\n\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Choose which format to use for this value:\n\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\n\t\t// Return with currency symbol added:\n\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t};\n\n\n\t/**\n\t * Format a list of numbers into an accounting column, padding with whitespace\n\t * to line up currency symbols, thousand separators and decimals places\n\t *\n\t * List should be an array of numbers\n\t * Second parameter can be an object containing keys that match the params\n\t *\n\t * Returns array of accouting-formatted number strings of same length\n\t *\n\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t * browsers from collapsing the whitespace in the output strings.\n\t */\n\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\tif (!list) return [];\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\n\t\t\t// Store value for the length of the longest string in the column:\n\t\t\tmaxLength = 0,\n\n\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// Clean up the value\n\t\t\t\t\tval = unformat(val);\n\n\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\n\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\n\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\treturn fVal;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Pad each number in the list and send back the column of numbers:\n\t\treturn map(formatted, function(val, i) {\n\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t};\n\n\n\t/* --- Module Definition --- */\n\n\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `accounting` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = lib;\n\t\t}\n\t\texports.accounting = lib;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn lib;\n\t\t});\n\t} else {\n\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t// Returns a reference to the library's `accounting` object;\n\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t// Delete the noConflict method:\n\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn lib;\n\t\t\t};\n\t\t})(root.accounting);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['accounting'] = lib;\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/accounting/accounting.js\n// module id = 20\n// module chunks = 0 6","<template>\n  <div class=\"\">\n    <!-- <el-table v-loading.body=\"fetching\" :data=\"products\" stripe border style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n      <el-table-column prop=\"customer.name\" label=\"Cliente\"></el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"navigate\" :current-page=\"pagination.current_page\" :page-size=\"pagination.per_page\" layout=\"total, prev, pager, next, jumper\" :total=\"pagination.total\">\n      </el-pagination>\n    </div> -->\n\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        Faturas Vindi\n      </div>\n\n      <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n          <table v-loading.body=\"loading\" class=\"table table-bordered table-hover\" id=\"table1\">\n            <thead>\n              <tr>\n                <!-- <th>Id</th> -->\n                <th>Franqueado</th>\n                <th>Competência</th>\n                <th>Vencimento</th>\n                <th>Forma de Pagamento</th>\n                <th>Valor Original</th>\n                <th>Valor pendente</th>\n                <th>Produto</th>\n                <th>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport accounting from 'accounting'\nimport { mapActions, mapState } from 'vuex'\nimport { vindiBills } from '../../../../services/config'\nimport { http } from 'plugins/http'\nimport _ from 'lodash'\nexport default {\n  metaInfo: {\n    titleTemplate: '%s - Faturas Vindi'\n  },\n  watch: {\n    // call again the method if the route changes\n    currentPage: 'fetch',\n  },\n  data() {\n    return {\n      loading: true,\n      months: [\n        'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\n      ]\n    }\n  },\n  created() {\n    var me = this\n    me.loading = true\n    setTimeout(function() {\n      self.dtHandle = $('#' + 'table1').DataTable({\n        \"serverSide\": true,\n        \"processing\": true,\n        \"ajax\": {\n          \"url\": vindiBills,\n          \"type\": \"GET\",\n          \"headers\": {\n            \"Authorization\": \"Bearer \" + me.$store.state.Auth.token\n          }\n        },\n        \"columns\": [\n            // { \"data\": \"id\" },\n            { \"data\": \"customer.name\" },\n            { \"data\": \"created_at\",\n              render: function(data, type, row) {\n                return moment(data).format(\"DD-MM-YYYY\")\n              }\n            },\n            { \"data\": \"due_at\",\n              render: function(data, type, row) {\n                if (row.due_at === null) {\n                  return moment(row.billing_at).format(\"DD-MM-YYYY\")\n                } else {\n                  return moment(data).format(\"DD-MM-YYYY\")\n                }\n              }\n\n            },\n            { \"data\": \"charges\",\n              render: function (data, type, row) {\n                return _.map(row.charges, 'payment_method.public_name').join(', ')\n              }\n            },\n            { \"data\": \"amount\" },\n            { \"data\": \"charges\",\n              render: function (data, type, row) {\n                return 'R$ ' + accounting.formatNumber(_.reduce(row.charges, function(sum, n) {\n                  if (n.status === \"pending\") {\n                      return sum + parseFloat(n.amount)\n                  } else {\n                    return sum + 0\n                  }\n                }, 0), 2)\n              }\n            },\n            { \"data\": null,\n              render: function(data, type, row) {\n                return _.map(row.bill_items, 'product.name').join(', ')\n              }\n            },\n            { \"data\": \"customer.email\" }\n        ]\n      })\n      me.loading = false\n    }, 1000)\n  },\n  methods: {\n    ...mapActions(['productsSetData', 'setFetching']),\n    /**\n    * Fetch a new set of products\n    * based on the current page\n    */\n    fetch() {\n      /**\n      * Vuex action to set fetching property\n      * to true, thus showing the spinner\n      * that is part of navbar.vue\n      */\n      this.setFetching({ fetching: true })\n      /**\n      * Makes the HTTP request to the API\n      * $http is a Vue.js plugins exposing\n      * an Axios object.\n      * See /src/plugins/http.js\n      */\n      // console.log(vindiBills)\n      this.$http.get(`${vindiBills}?page=${this.currentPage}`).then(({ data }) => {\n        /**\n        * Vuex action to set pagination object in\n        * the Vuex Products module\n        */\n        this.productsSetData({\n          list: data.data,\n          pagination: data.meta.pagination,\n        })\n        /**\n        * Vuex action to set fetching property\n        * to false, thus hiding the spinner\n        * that is part of navbar.vue\n        */\n        this.setFetching({ fetching: false })\n      })\n    },\n    /**\n    * Navigate to a specific page, provided in the\n    * obj received by the method\n    */\n    navigate(page) {\n      /**\n      * Push the page number to the query string\n      */\n      this.$router.push({ name: 'vindi.bills', query: { page } })\n    }\n  },\n  /**\n  * mapState will bring indicated Vuex\n  * state properties to the scope of this component.\n  */\n  computed: {\n    ...mapState({\n      fetching: state => state.fetching,\n      pagination: state => state.Products.pagination,\n      list: state => state.Products.list,\n    }),\n    products() {\n      return this.list\n    },\n    currentPage() {\n      return parseInt(this.$route.query.page, 10) || 1\n    }\n  },\n  /**\n    * Right before navigate out to another route\n    * clears all event handlers, thus avoiding\n    * multiple handlers to be set and the annoying\n    * behaviour of multiple AJAX calls being made.\n    */\n    beforeRouteLeave(to, from, next) {\n      this.$bus.$off('product.created')\n      this.$bus.$off('product.updated')\n      jQuery('body').off('keyup')\n      next()\n    },\n    mounted() {\n      /**\n      * Product was created or updated, refresh the list\n      */\n      this.$bus.$on('product.created', () => this.fetch())\n      this.$bus.$on('product.updated', () => this.fetch())\n      /**\n      * Fetch data immediately after component is mounted\n      */\n      // this.fetch()\n    }\n}\n</script>\n\n<style lang=\"css\">\n</style>\n\n\n\n// WEBPACK FOOTER //\n// index.vue?c08050f0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"index.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/Modulos/Vindi/Bills/pages/index.vue\n// module id = 466\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-8e3a385a!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/Modulos/Vindi/Bills/pages/index.vue\n// module id = 526\n// module chunks = 6","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-8e3a385a!vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./index.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-8e3a385a!vue-loader/lib/selector?type=template&index=0!./index.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Modulos/Vindi/Bills/pages/index.vue\n// module id = 575\n// module chunks = 6","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('div', {\n    staticClass: \"panel panel-default\"\n  }, [_c('div', {\n    staticClass: \"panel-heading\"\n  }, [_vm._v(\"\\n      Faturas Vindi\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"panel-body\"\n  }, [_c('div', {\n    staticClass: \"table-responsive\"\n  }, [_c('table', {\n    directives: [{\n      name: \"loading\",\n      rawName: \"v-loading.body\",\n      value: (_vm.loading),\n      expression: \"loading\",\n      modifiers: {\n        \"body\": true\n      }\n    }],\n    staticClass: \"table table-bordered table-hover\",\n    attrs: {\n      \"id\": \"table1\"\n    }\n  }, [_vm._m(0), _vm._v(\" \"), _c('tbody')])])])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"Franqueado\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Competência\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Vencimento\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Forma de Pagamento\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Valor Original\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Valor pendente\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Produto\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Email\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-8e3a385a!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Modulos/Vindi/Bills/pages/index.vue\n// module id = 614\n// module chunks = 6"],"sourceRoot":""}